<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Projekt miał się nazywać byki w kodzie... i tak właśnie się nazywa. Znajdziesz tu krótkie artykuły na temat tworzenia stron - totalne podstawy, czasami też jakieś inne smuty. Miłego czytania!</description>
    <link></link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Pseudoelementy oraz pseudoklasy</title>
        <description>&lt;p&gt;Pseudoelementy oraz pseudoklasy to ważny element stron internetowych. Czym jednak są, do czego służą i czym się różnią? Dlaczego warto je poznać nieco lepiej i w jaki sposób mogą pomóc nam kodować kolejne projekty?
Warto na początku wspomnieć o tym, że &lt;strong&gt;pseudoklasy oraz pseudoelementy to nie to samo&lt;/strong&gt;. Wydaje się, że w sumie to obojętne, jak to nazywamy - przecież i tak wywołujemy je w CSS. No właśnie; zarówno pseudoelementy, jak i pseudoklasy tworzy się w CSS.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:last-child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;italic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/div&gt;

&lt;p&gt;To jest pseudoklasa. Do czego mogą posłużyć? Mianowicie - czasami mamy za zadanie wystylizować np.: ostatnie elementy nieco inaczej. Nie byłoby to możliwe, jeżeli nie użylibyśmy pseudoklasy &lt;code class=&quot;highlighter-rouge&quot;&gt;:last-child&lt;/code&gt;. W tym momencie osoba, która jeszcze nie działała na pseudoklasach puka się w głowę i mówi: &lt;em&gt;przecież mogę dodać dodatkową klasę do ostatniego elementu - i załatwiam sprawę. Szach mat!&lt;/em&gt;
Takie rozwiązanie ma sens! Do momentu w którym masz za zadanie napisać szablon do np.: Wordpressa i tam link do ostatniego artykułu ma być szary, podczas gdy pozostałe są czerwone. Wtedy jak najbardziej możesz utrudnić sobie kod, tworząc w PHP warunek, który wyświetli blok z tą klasą do ostaniego linku… lub wykorzystać pseudoklasę, dzięki czemu Twój kod w PHP będzie łatwiejszy i czytelniejszy. &lt;code class=&quot;highlighter-rouge&quot;&gt;:last-child&lt;/code&gt; to nie jedyna pseudoklasa, istnieje ich bardzo dużo:&lt;/p&gt;

&lt;dl class=&quot;terms-list&quot;&gt;
&lt;dt class=&quot;term-title&quot;&gt;:hover&lt;/dt&gt;
&lt;dd class=&quot;term-description&quot;&gt;Służy do stylizowania elementu, jeżeli kursor znajduje się nad nim(czyt.: jest najechany).&lt;/dd&gt;
&lt;dt class=&quot;term-title&quot;&gt;:active&lt;/dt&gt;
&lt;dd class=&quot;term-description&quot;&gt;Jeżeli element jest kliknięty, wtedy aplikowane są style właśnie z tej pseudoklasy.&lt;/dd&gt;
&lt;dt class=&quot;term-title&quot;&gt;:lang(attr)&lt;/dt&gt;
&lt;dd class=&quot;term-description&quot;&gt;Stylizuje dany element pod warunkiem, że element posiada atrybut `lang` z wartością `attr`.&lt;/dd&gt;
&lt;dt class=&quot;term-title&quot;&gt;:nth-child(2n+1)&lt;/dt&gt;
&lt;dd class=&quot;term-description&quot;&gt;Taki zapis wystylizuje każdy nieparzysty element.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;To są wyłącznie cztery przykłady. Z pierwszym z pewnością mogliście się spotkać w praktyce. Jego użycie pozwala na poinformowanie użytkownika, że najechał na element, który może mieć jakieś znaczenie - najczęściej to adresy. Życie bez pseudoklas byłoby o wiele cięższe.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;OK, a czym są w takim razie pseudoelementy? Są to w najłatwiejszy sposób mówiąc bloki, które tworzymy w CSS. Pseudobloki, które wykorzystujemy najczęściej to &lt;code class=&quot;highlighter-rouge&quot;&gt;::after&lt;/code&gt; oraz &lt;code class=&quot;highlighter-rouge&quot;&gt;::before&lt;/code&gt;. Zastosowań jest bardzo dużo - jedno z nich to tworzenie tzw. “clearfixów” do elementów. Inne to chociażby tworzenie niestandardowych punktów listy, umieszczanie ikon, które są dekoracją. W przykładowych kodach na tej witrynie również są pseudoelementy - wykorzystuję je tutaj aby uzyskać &lt;a href=&quot;https://codepen.io/radek024/pen/xRJvVQ&quot;&gt;nierówne krawędzie elementów&lt;/a&gt;.
Dużą zaletą pseudobloków jest to, że nie tworzymy zbędnego kodu HTML. A co jeżeli ktoś lubi zbędny kod HTML? Tworzenie pustych bloków w takim razie może być OK - ale nie szanujemy w takim razie zasady &lt;em&gt;progressive enhancement&lt;/em&gt;. Owe bloki to nic innego jak dekoracja strony, więc należy do warstwy CSS. Osobiście nie widzę logicznego wytłumaczenia dla takiego działania. Przez to strona posiada krótszy kod, a tym samym zyskujemy na czasie ładowania strony. Jak wygląda clearfix poprzez pseudoelementy?&lt;/p&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.about-us&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:after&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;both&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;Dzięki takiemu zapisowi nie musimy tworzyć zwykłego bloku w HTML. Często można taki kod wykorzystać wielokrotnie - używając dodatkowo preprocesorów jesteśmy w stanie zaoszczędzić dużo czasu(chociażby poprzez załączanie tego samego kodu). Ale wracając; czy przykład podany wyżej jest poprawny? Wcześniej użyte zostały dwa dwukropki, a teraz jeden. Odpowiedź brzmi: tak, obie formy są akceptowalne, z tym że wersja z pojedyńczym dwukropkiem jest akceptowana przez starsze przeglądarki. Jaki system przyjąć? Dzięki podwójnym dwukropkom łatwo odróżnimy pseudoklasę od pseudoelementu, a pojedyńczym - uzyskujemy wsparcie wsteczne. Wybór należy do Ciebie.&lt;/p&gt;

&lt;p&gt;Podsumowując: pseudoklasy pozwalają na dotarcie do elementów HTML i wystylizowanie ich, a pseudoblokom zawdzięczamy często schludniejszy kod HTML. I na koniec przydatne linki:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/pseudo-classes&quot;&gt;Pseudoklasy na MDN&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/pseudo-elements&quot;&gt;Pseudoelementy na MDN&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://codepen.io/radek024/pen/RRJwKR&quot;&gt;Pseudoklasa &lt;code class=&quot;highlighter-rouge&quot;&gt;:not()&lt;/code&gt; w praktyce&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://codepen.io/radek024/pen/vgrrBv&quot;&gt;Przykład użycia pseudobloków&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 18 May 2017 00:00:00 +0200</pubDate>
        <link>//bykiwkodzie/css/2017/05/18/pseudoklasy_oraz_pseudoelementy/</link>
        <guid isPermaLink="true">//bykiwkodzie/css/2017/05/18/pseudoklasy_oraz_pseudoelementy/</guid>
      </item>
    
      <item>
        <title>Hello World!</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Siedzę przed jakąś dziwną maszyną i myślę, że tekst mój ma się oddzielić ode mnie i pójść w świat beze mnie, jego właściciela. Zabawne pomysły mają ludzie! Doprawdy, trudno się nie śmiać z tej dziwnej sytuacji, w której nagle tekst pana Radka się znajdzie. Wyobrażam sobie tę zabawną chwilę, gdy jakiś ananas korbą nakręci, śrubkę naciśnie i jakaś trąba, zamiast mnie, jakieś literki pokazywać zacznie. Ciekawe!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tak oto wyglądają pierwsze znaki postawione na tej stronie internetowej. Pierwsze rzecz jasna po Lorem Ipsum, które jest nieodłączną częścią wszystkiego. Zanim przejdę dalej chciałbym wytłumaczyć kilka rzeczy.&lt;/p&gt;

&lt;h3 id=&quot;radek-po-kiego-ta-strona&quot;&gt;Radek, po kiego ta strona?&lt;/h3&gt;
&lt;p&gt;Często w sieci pomagam ludziom, z reguły początkującym w swoich pierwszych krokach związanych ze stronami internetowymi. Często te porady są identyczne. Jakiś już czas temu(głupio się przyznać, że od pomysłu mija już niemal rok) postanowiłem, że warto abym gdzieś sobie te uniwersalne odpowiedzi trzymał. Pierwszy pomysł, na jaki wpadłem to utworzenie jakiegoś pliku, który będzie przywoływany przeze mnie przy okazji wspomnianej już pomocy. Taki też format przyjąłem; spisałem sobie kilka rzeczy.&lt;/p&gt;

&lt;p&gt;Uznałem jednak, że to trochę nieoptymalne(a ci, którzy mnie znają, wiedzą że lubię jak coś działa sprawnie i zawsze można zrobić coś lepiej). Postanowiłem wtedy założyć stronkę na Github Pages, gdzie będę odsyłał do wszelakiej maści artykułów. Jako, że chciałem to utrzymać w charakterze odsyłania początkujących do powtarzających się porad, wpadłem na nazwę: &lt;strong&gt;byki w kodzie&lt;/strong&gt;. Od tego momentu całość nie wypłynęła do publiki i zdążyła już zmienić wygląd(jeszcze zanim ktokolwiek zobaczył pierwszą wersję witryny usunąłem ją i napisałem jeszcze raz, od zera :v).&lt;/p&gt;

&lt;p&gt;W międzyczasie zaczęło się Daj Się Poznać 2017 i dostrzegłem narzędzie znane jako &lt;strong&gt;Jekyll&lt;/strong&gt;. Postanowiłem się zapoznać z nim bliżej i w sumie bardzo mi przypadło do gustu. Nie dość, że jestem w stanie prowadzić coś na styl bloga na githubie, to na dodatek jest to fajnie skonstruowane - moim zdaniem Jekyll jest mega fajną odskocznią od chociażby Wordpressa.&lt;/p&gt;

&lt;p&gt;I tak oto - zarówno ja, jak i Ty, Czytający - jesteśmy tutaj.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Byki w kodzie&lt;/strong&gt; to projekt, w którym zbieram podstawowe informacje na temat tworzenia stron, ale i nie tylko - chciałbym tutaj(kiedyś) poruszyć sprawy związane z tematami nieco innymi, ale to kiedyś. Nie chcę, aby strona była przewodnikiem, a raczej zbiorem treści, które przygotowałaby do nauki pewnych rzeczy. Sam lubię taką formę nauki - z początku krążę wokół tematu, a później jadę z nim bardziej merytorycznie. Kojarzycie wstęp?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Podobno krok pierwszy nigdy nie był tak łatwy…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;( ͡° ͜ʖ ͡°) Dzięki za przeczytanie - zapraszam również do kolejnych wpisów, a te z czasem będą się pojawiały na stronie. Mam jednak dylemat; macie może jakiś pomysł, jak mógłbym Was poinformować o nowym wpisie? Dajcie znać w komentarzu lub poprzez zakładkę &lt;a href=&quot;/bykiwkodzie/kontakt&quot;&gt;Kontakt&lt;/a&gt;. Z góry dzięki za reakcję! :)&lt;/p&gt;
</description>
        <pubDate>Thu, 18 May 2017 00:00:00 +0200</pubDate>
        <link>//offtop/2017/05/18/hello_world/</link>
        <guid isPermaLink="true">//offtop/2017/05/18/hello_world/</guid>
      </item>
    
  </channel>
</rss>
